{
  "name": "browserslist",
  "version": "0.4.0",
  "description": "Get browsers versions that matches given criterias like in Autoprefixer",
  "keywords": [
    "caniuse",
    "browsers"
  ],
  "author": {
    "name": "Andrey Sitnik",
    "email": "andrey@sitnik.ru"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ai/browserslist.git"
  },
  "dependencies": {
    "caniuse-db": "^1.0.30000153"
  },
  "devDependencies": {
    "gulp-eslint": "0.11.1",
    "gulp-mocha": "2.0.1",
    "mocha": "2.2.4",
    "chai": "2.3.0",
    "gulp": "3.8.11"
  },
  "scripts": {
    "test": "gulp"
  },
  "readme": "# Browserslist [![Build Status](https://travis-ci.org/ai/browserslist.svg)](https://travis-ci.org/ai/browserslist)\n\nGet browser versions that match given criteria.\nUseful for tools like [Autoprefixer].\n\nYou can select browsers by passing a string. This library will use Can I Use\ndata to return the appropriate list of all matching versions.\n\nFor example, the last version of each major browser and versions,\nwith a usage of over 5% in global usage statistics:\n\n```js\nbrowserslist('last 1 version, > 5%');\n//=> ['and_chr 41', 'chrome 41', 'chrome 40', 'firefox 37', 'firefox 36',\n//    'ie 11', 'ie_mob 11', 'ios_saf 8.1-8.3', 'opera 27', 'safari 8']\n```\n\nBrowserslist will use browsers criterias from:\n\n1. First argument.\n2. `BROWSERSLIST` environment variable.\n3. `browserslist` config file in current or parent directories.\n4. If all methods will not give a result, Browserslist will use defaults:<br>\n   `> 1%, last 2 versions, Firefox ESR, Opera 12.1`.\n\n<a href=\"https://evilmartians.com/?utm_source=browserslist\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n\n## Queries\n\nYou can specify the versions by queries (case insensitive):\n\n* `last 2 versions`: the last 2 versions for each major browser.\n* `last 2 Chrome versions`: the last 2 versions of Chrome browser.\n* `> 5%`: versions selected by global usage statistics.\n* `> 5% in US`: uses USA usage statistics. It accepts [two-letter country code].\n* `Firefox > 20`: versions of Firefox newer than 20.\n* `Firefox >= 20`: versions of Firefox newer than or equal to 20.\n* `Firefox < 20`: versions of Firefox less than 20.\n* `Firefox <= 20`: versions of Firefox less than or equal to 20.\n* `Firefox ESR`: the latest [Firefox ESR] version.\n* `iOS 7`: the iOS browser version 7 directly.\n\nBlackberry and Android WebView will not be used in `last n versions`.\nYou should add them by name.\n\nBrowserslist works with separated versions of browsers. To use all versions\nof some browsers you can use `Firefox > 0`, but it is a very bad way.\n\n[two-letter country code]: http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements\n\n## Browsers\n\nNames are case insensitive:\n\n* `Android` for Android WebView.\n* `BlackBerry` or `bb` for Blackberry browser.\n* `Chrome` for Google Chrome.\n* `Firefox` or `ff` for Mozilla Firefox.\n* `Explorer` or `ie` for Internet Explorer.\n* `iOS` or `ios_saf` for iOS Safari.\n* `Opera` for Opera.\n* `Safari` for desktop Safari.\n* `OperaMobile` or `op_mob` for Opera Mobile.\n* `OperaMini` or `op_mini` for Opera Mini.\n* `ChromeAndroid` or `and_chr` for Chrome for Android\n  (mostly same as common `Chrome`).\n* `FirefoxAndroid` or `and_ff` for Firefox for Android.\n* `ExplorerMobile` or `ie_mob` for Internet Explorer Mobile.\n\n\n## Usage\n\n```js\nvar browserslist = require('browserslist');\n\n// Your CSS/JS build tool code\nvar process = function (css, opts) {\n    var browsers = browserslist(opts.browsers, { path: opts.file });\n    // Your code to add features for selected browsers\n}\n```\n\nIf a list is missing, Browserslist will look for a config file.\nYou can provide a `path` option (that can be a file) to find the config file\nrelatively to it.\n\nQueries can be a string `\"> 5%, last 1 version\"`\nor an array `['> 5%', 'last 1 version']`.\n\n## Config File\n\nBrowserslist’s config should be named `browserslist` and have browsers queries\nsplit by a new line. You can write a comment after `#`:\n\n```yaml\n# Browsers that we support\n\n> 1%\nLast 2 versions\nIE 8 # sorry\n```\n\nYou can specify direct path to config by `config` option.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ai/browserslist/issues"
  },
  "homepage": "https://github.com/ai/browserslist#readme",
  "_id": "browserslist@0.4.0",
  "_shasum": "3bd4ab9199dc1b9150d4d6dba4d9d3aabbc86dd4",
  "_resolved": "http://registry.npmjs.org/browserslist/-/browserslist-0.4.0.tgz",
  "_from": "browserslist@>=0.4.0 <0.5.0"
}
