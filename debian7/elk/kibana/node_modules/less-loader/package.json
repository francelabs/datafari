{
  "name": "less-loader",
  "version": "2.2.0",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "description": "less loader module for webpack",
  "scripts": {
    "test": "mocha -R spec",
    "test-source-map": "webpack --config test/sourceMap/webpack.config.js && open ./test/sourceMap/index.html"
  },
  "peerDependencies": {
    "less": "^2.3.1"
  },
  "devDependencies": {
    "css-loader": "^0.9.1",
    "enhanced-require": "^0.5.0-beta6",
    "extract-text-webpack-plugin": "^0.5.0",
    "less": "^2.3.1",
    "mocha": "^2.0.1",
    "raw-loader": "^0.5.1",
    "should": "^5.2.0",
    "webpack": "^1.1.8"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/webpack/less-loader.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/mit-license.php"
    }
  ],
  "dependencies": {
    "loader-utils": "^0.2.5"
  },
  "readme": "# less loader for webpack\r\n\r\n## Usage\r\n\r\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\r\n\r\n``` javascript\r\nvar css = require(\"!raw!less!./file.less\");\r\n// => returns compiled css code from file.less, resolves imports\r\nvar css = require(\"!css!less!./file.less\");\r\n// => returns compiled css code from file.less, resolves imports and url(...)s\r\n```\r\n\r\nUse in tandem with the [`style-loader`](https://github.com/webpack/style-loader) to add the css rules to your document:\r\n\r\n``` javascript\r\nrequire(\"!style!css!less!./file.less\");\r\n```\r\n\r\n### webpack config\r\n\r\n``` javascript\r\nmodule.exports = {\r\n  module: {\r\n    loaders: [\r\n      {\r\n        test: /\\.less$/,\r\n        loader: \"style!css!less\"\r\n      }\r\n    ]\r\n  }\r\n};\r\n```\r\n\r\nThen you only need to write: `require(\"./file.less\")`\r\n\r\n### LESS options\r\n\r\nYou can pass any LESS specific configuration options through to the render function via [query parameters](http://webpack.github.io/docs/using-loaders.html#query-parameters).\r\n\r\n``` javascript\r\nmodule.exports = {\r\n  module: {\r\n    loaders: [\r\n      {\r\n        test: /\\.less$/,\r\n        loader: \"style!css!less?strictMath&noIeCompat\"\r\n      }\r\n    ]\r\n  }\r\n};\r\n```\n\nSee the [LESS documentation](http://lesscss.org/usage/#command-line-usage-options) for all available options. LESS translates dash-case to camelCase.\r\n\r\n### LESS plugins\r\n\r\nIn order to use [plugins](http://lesscss.org/usage/#plugins), simply define\r\nthe `lessLoader.lessPlugins` option. You can also change the options key\r\nwith a query parameter: `\"style!css!less?config=lessLoaderCustom\"`.\r\n\r\n``` javascript\r\nvar LessPluginCleanCSS = require('less-plugin-clean-css');\r\n\r\nmodule.exports = {\r\n  module: {\r\n    loaders: [...]\r\n  },\r\n  lessLoader:\r\n    lessPlugins: [\r\n      new LessPluginCleanCSS({advanced: true})\r\n    ]\r\n};\r\n```\r\n\r\n## Note on imports\r\n\r\nwebpack provides an [advanced mechanism to resolve files](http://webpack.github.io/docs/resolving.html). The less-loader stubs less' `fileLoader` and passes all queries to the webpack resolving engine. Thus you can import your less-modules from `node_modules` or `bower_components`. Just prepend them with a `~` which tells webpack to look-up the [`modulesDirectories`](http://webpack.github.io/docs/configuration.html#resolve-modulesdirectories)\r\n\r\n```css\r\n@import \"~bootstrap/less/bootstrap\";\r\n```\r\n\r\nIt's important to only prepend it with `~`, because `~/` resolves to the home-directory. webpack needs to distinguish `bootstrap` from `~bootstrap` because css- and less-files have no special syntax for importing relative files:\r\n\r\n```css\r\n@import \"file\";\r\n```\r\n\r\nis the same as\r\n\r\n```css\r\n@import \"./file\";\r\n```\n\n## Source maps\n\nBecause of browser limitations, source maps are only available in conjunction with the [extract-text-webpack-plugin](https://github.com/webpack/extract-text-webpack-plugin). Use that plugin to extract the CSS code from the generated JS bundle into a separate file (which even improves the perceived performance because JS and CSS are loaded in parallel).\n\nThen your `webpack.config.js` should look like this:\n\n```javascript\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\n\nmodule.exports = {\n    ...\n    // must be 'source-map' or 'inline-source-map'\n    devtool: 'source-map',\n    module: {\n        loaders: [\n            {\n                test: /\\.less$/,\n                loader: ExtractTextPlugin.extract(\n                    // activate source maps via loader query\n                    'css?sourceMap!' +\n                    'less?sourceMap'\n                )\n            }\n        ]\n    },\n    plugins: [\n        // extract inline css into separate 'styles.css'\n        new ExtractTextPlugin('styles.css')\n    ]\n};\n```\n\nIf you want to view the original LESS files inside Chrome and even edit it,  [there's a good blog post](https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0). Checkout [test/sourceMap](https://github.com/webpack/less-loader/tree/master/test) for a running example. Make sure to serve the content with an HTTP server.\r\n\r\n## Contribution\r\n\r\nDon't hesitate to create a pull request. Every contribution is appreciated. In development you can start the tests by calling `npm test`.\r\n\r\nThe tests are basically just comparing the generated css with a reference css-file located under `test/css`. You can easily generate a reference css-file by calling `node test/helpers/generateCss.js <less-file-without-less-extension>`. It passes the less-file to less and writes the output to the `test/css`-folder.\r\n\r\n[![build status](https://travis-ci.org/webpack/less-loader.svg)](https://travis-ci.org/webpack/less-loader)\r\n\r\n## License\r\n\r\nMIT (http://www.opensource.org/licenses/mit-license.php)\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/webpack/less-loader/issues"
  },
  "homepage": "https://github.com/webpack/less-loader#readme",
  "_id": "less-loader@2.2.0",
  "_shasum": "652ced15fa34747e6f0832ea2f3aa88b7037353b",
  "_resolved": "http://registry.npmjs.org/less-loader/-/less-loader-2.2.0.tgz",
  "_from": "less-loader@2.2.0"
}
