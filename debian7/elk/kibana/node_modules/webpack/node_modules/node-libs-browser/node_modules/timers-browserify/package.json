{
  "author": {
    "name": "J. Ryan Stinnett",
    "email": "jryans@gmail.com",
    "url": "http://convolv.es/"
  },
  "name": "timers-browserify",
  "description": "timers module for browserify",
  "version": "1.4.1",
  "homepage": "https://github.com/jryans/timers-browserify",
  "bugs": {
    "url": "https://github.com/jryans/timers-browserify/issues"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jryans/timers-browserify.git"
  },
  "contributors": [
    {
      "name": "Guy Bedford",
      "email": "guybedford@gmail.com"
    },
    {
      "name": "Ionut-Cristian Florescu",
      "email": "ionut.florescu@gmail.com"
    },
    {
      "name": "James Halliday",
      "email": "mail@substack.net"
    },
    {
      "name": "Jan SchÃ¤r",
      "email": "jscissr@gmail.com"
    },
    {
      "name": "Johannes Ewald",
      "email": "johannes.ewald@peerigon.com"
    },
    {
      "name": "Jonathan Prins",
      "email": "jon@blip.tv"
    },
    {
      "name": "Matt Esch",
      "email": "matt@mattesch.info"
    }
  ],
  "main": "main.js",
  "dependencies": {
    "process": "~0.11.0"
  },
  "devDependencies": {
    "connect": "~2.3.0",
    "browserify": "~1.10.16"
  },
  "optionalDependencies": {},
  "engines": {
    "node": ">=0.6.0"
  },
  "keywords": [
    "timers",
    "browserify",
    "browser"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jryans/timers-browserify/blob/master/LICENSE.md"
    }
  ],
  "readme": "# Overview\n\nAdds support for the `timers` module to browserify.\n\n## Wait, isn't it already supported in the browser?\n\nThe public methods of the `timers` module are:\n\n* `setTimeout(callback, delay, [arg], [...])`\n* `clearTimeout(timeoutId)`\n* `setInterval(callback, delay, [arg], [...])`\n* `clearInterval(intervalId)`\n\nand indeed, browsers support these already.\n\n## So, why does this exist?\n\nThe `timers` module also includes some private methods used in other built-in\nNode.js modules:\n\n* `enroll(item, delay)`\n* `unenroll(item)`\n* `active(item)`\n\nThese are used to efficiently support a large quantity of timers with the same\ntimeouts by creating only a few timers under the covers.\n\nNode.js also offers the `immediate` APIs, which aren't yet available cross-browser, so we polyfill those:\n\n* `setImmediate(callback, [arg], [...])`\n* `clearImmediate(immediateId)`\n\n## I need lots of timers and want to use linked list timers as Node.js does.\n\nLinked lists are efficient when you have thousands (millions?) of timers with the same delay.\nTake a look at [timers-browserify-full](https://www.npmjs.com/package/timers-browserify-full) in this case.\n\n# License\n\n[MIT](http://jryans.mit-license.org/)\n",
  "readmeFilename": "README.md",
  "_id": "timers-browserify@1.4.1",
  "_shasum": "bf8afeb7b50d6c500e2b3e0a5d759c4005e985d7",
  "_resolved": "http://registry.npmjs.org/timers-browserify/-/timers-browserify-1.4.1.tgz",
  "_from": "timers-browserify@>=1.0.1 <2.0.0"
}
