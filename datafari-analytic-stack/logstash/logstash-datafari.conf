input {

@ADDITIONAL_INPUTS@
  
  file {
    path => "/francelabs/localhost_access_log_datafari.txt"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "access"
    codec => multiline {
      patterns_dir => "./patterns"
      pattern => "%{LOCALHOST_ACCESS_START}"
      negate => "true"
      what => "previous"
    }
  }

  file {
    path => "/francelabs/datafari-monitoring.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "exploit"
    codec => multiline {
      patterns_dir => "./patterns"
      pattern => "%{STAT_LINE_START}"
      negate => "true"
      what => "previous"
      }
  }
  
}

filter {

  if [type] == "exploit" {

    grok {
      patterns_dir => "./patterns"
      match => { "message" => "%{LOG4J_TIMESTAMP:logDate} %{WORD:level}" }
    }
  
    if [level] == "MONITORING" {
      grok {
        patterns_dir => "./patterns"
        match => { "message" => ".* - %{CUSTOM_DATA:id}\|%{CUSTOM_DATA:timestamp}\|%{INT:numDocs}\|%{CUSTOM_DATA:facet}\|%{GREEDYDATA:facetType}" }
      }
  
      mutate {
        add_tag => ["monitoring"]
      }
  
    }
  
    # Remove unused fields
    mutate {
      remove_field => [ "logDate", "level" ]
    }
  
  }
  
  if [type] == "access" {
  
    grok {
      patterns_dir => "./patterns"
      match => { "message" => "%{IP:client_ip} %{LOG4J_TIMESTAMP:date} \"%{GREEDYDATA:access_request}\" %{INT:access_request_code} %{INT:access_request_time}" }
    }
    
    # Add index_date field
    mutate {
      add_field => ["index_date", "%{year}.%{month}.%{day}"]
    }
    
  }
  
@ADDITIONAL_FILTERS@
  
  #generate a finderprint of the message that can provide a unique id for the document if needed
  fingerprint {
    source => ["message"]
    target => "fingerprint"
  }
  
  # Remove unused fields
  mutate {
    remove_field => [ "day", "month", "year", "@timestamp", "message", "@version", "event", "log" ]
  }
  
  # ignore parse failure
  if "_grokparsefailure" in [tags] {
      drop { }
  }
}


output {

  if [type] == "exploit" {
    
    if "monitoring" in [tags] {
      solr_http {
        solr_url => "http://@SOLR_HOST@:8983/solr/Monitoring"
        document_id => "%{id}"    
        idle_flush_time => 100
        flush_size => 10 
      }
    }
  }
  
  if [type] == "access" {
    solr_http {
      solr_url => "http://@SOLR_HOST@:8983/solr/Access"
      document_id => "%{fingerprint}"
      idle_flush_time => 100
      flush_size => 10
    }
  }

@ADDITIONAL_OUTPUTS@
}
